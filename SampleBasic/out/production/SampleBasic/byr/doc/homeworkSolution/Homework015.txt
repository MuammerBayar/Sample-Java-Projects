/*----------------------------------------------------------------------------------------------------------------------
    Homework-015
    verilen ders: 41-10-07-2xxx
    çözülen ders: --

    Soru: Bir oyun kartını temsil eden Card isimli sınıfı aşağıda belirtildiği gibi org.csystem.game.cardgame paketi
    içerisinde yazınız:

    Bir kartın iki özelliği vardır: türü ve değeri. Bunun için aşağıdaki enum türlerini kullanabilirsiniz:

    package org.csystem.game.cardgame;

    public enum CardType
    {
        SPADE, CLUB, DIAMOND, HEART
    }

    package org.csystem.game.cardgame;

    public enum CardValue
    {
        TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE, TEN, KNAVE, QUEEN, KING, ACE
    }

    Bu iki özellik Card sınıfının private veri elemanlarıyla ifade edilebilir:

    package org.csystem.game.cardgame;

    public class Card {
        private CardValue m_value;
        private CardType m_type;
        //...
        public static Card[] getShuffledDeck()
        {
            Card[] deck = new Card[52];
            //...
            return deck;
        }
        public Card(CardValue value, CardType type)
        {
            //...
        }
        public Card(String name)
        {
            //...
        }
        public String getName()
        {
            //...
        }
        public void setName(String name)
        {
            //...
        }
        //...
        public String toString()
        {
        //...
        }

        //…
    }

    Card sınıfına başlangıç, get ve set metotları yerleştirilmelidir. Ayrıca Card sınıfının aşağıdaki parametrik yapıya
    sahip bir toString() metodu bulunmalıdır.

    public String toString()
    {
        //...
    }

    Bir kart nesnesinin yaratılması ve yazdırılması şöyle yapılabilir:

    Card c = new Card(CardValue.ACE, CardType.DIAMOND); // Karo As
    System.out.println(c.toString());

    Bu başlangıç metodunun iki tane enum türünden argüman aldığına dikkat ediniz. Ayrıca sınıfa String parametreli
    bir başlangıç metodu yerleştiriniz. Bu metot kartı sayıyla değil yazıyla alıp oluşturmalıdır. Örneğin:

    Card c = new Card(“Kupa-Papaz”);

    Sınıfın ayrıca getName ve setName metotları da bulunmalıdır.

    c.setName(“Kupa-Papaz”);

    Kart isimlerinin, önce tür sonra değeri ile belirtildiğine ve arada ‘-‘ karakterinin bulunduğuna dikkat ediniz.
    setName metodu yazıyı ayrıştırarak sınıfın m_type ve m_value veri elemanlarını set edecektir. Geçeriz yazı için
    programı mesaj verip sonlandırabilirsiniz.

    Sınıfın static getShuffledDeck isimli metodu bize karıştırılmış bir deste (52 tane) kart verir. Karıştırma için
    dizinin iki elemanını belli miktarda yer değiştirebilirsiniz. Test işlemini aşağıdaki örnek kodla yapabilirsiniz:

    public static void main(String [] args)
    {
        Card[] deck;
        deck = Card.getShuffledDeck();
        for (Card c : deck)
        System.out.println(c.toString());
    }

    Card sınıfına ve enum türlerine istediğiniz başka elemanları ekleyebilirsiniz.


    C ve Sistem Programcıları Derneği
    Java ile Nesne Yönelimli Programlama
    Çalışma Soruları
----------------------------------------------------------------------------------------------------------------------*/

/*----------------------------------------------------------------------------------------------------------------------
	 Question-01
	 çözüm tarihi: --
----------------------------------------------------------------------------------------------------------------------*/

public enum CardType
{
	SPADE, CLUB, DIAMOND, HEART
}

public enum CardValue
{
	TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE, TEN, KNAVE, QUEEN, KING, ACE
}

import java.util.Random;

public class Card
{
   private CardValue m_value;
   private CardType m_type;

   private static void fillDeck(Card [] deck)
   {
      int i = 0;

      for (CardType type : CardType.values())
         for (CardValue value : CardValue.values())
            deck[i++] = new Card(value, type);
   }

   private static void swap(Card [] cards, int i, int k)
   {
      Card temp = cards[i];
      cards[i] = cards[k];
      cards[k] = temp;
   }

   private static void shuffledDeck(Card [] deck)
   {
      boolean [] numbers = new boolean[52];
      Random r = new Random();

      for (int i = 0 ; i < 52; ++i) {
         int j = r.nextInt(52);
         int k = r.nextInt(52);

         if (!numbers[j] && !numbers[k]) {
            swap(deck, j, k);
            numbers[j] = true;
            numbers[k] = true;
         }
      }
   }
   public static Card [] getShuffledDeck()
   {
      Card [] deck = new Card[52];

      fillDeck(deck);
      shuffledDeck(deck);

      return deck;
   }

   public Card(String cardName)
   {
      setName(cardName.trim());
   }

   public Card(CardValue value, CardType type)
   {
      //...
      m_value = value;
      m_type = type;
   }

   public String getName()
   {
      return m_value + "-" + m_type;
   }

   public void setName(String cardName)
   {
      String [] cardInfos = cardName.split("[-]+");

      if (cardInfos.length < 2 ) {
         System.out.println("Wrong Card Name");
         System.exit(0);
      }
      m_value = CardValue.valueOf(cardInfos[0].toUpperCase());
      m_type = CardType.valueOf(cardInfos[1].toUpperCase());

   }
   public String toString()
   {
      return String.format("%s-%s", m_type.toString(), m_value.toString());
   }

}
